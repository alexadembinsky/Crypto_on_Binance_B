# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–æ–≤ /lists

from telebot.types import Message
from bot_instance import bot
from db_operations import get_user_by_id, get_user_watchlists
from keyboards import get_watchlists_keyboard
from other_functions.trace_function_call import trace_function_call


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–æ–≤ /lists
@bot.message_handler(commands=['lists'])
def handle_show_lists(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–æ–≤ /lists"""
    trace_function_call()
    user_id = message.from_user.id
    try:
        user = get_user_by_id(user_id)  # @–û–ë–î

        if not user:
            bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start")
            return

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @–û–ë–î
        watchlists = get_user_watchlists(user)  # @–û–ë–î

        if not watchlists:
            bot.send_message(
                user_id,
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–ø–∏—Å–∫–æ–≤.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /newlist —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫."
            )
            return

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–∞–º–∏
        markup = get_watchlists_keyboard(watchlists)  # @IK

        bot.send_message(
            user_id,
            "<b>–í–∞—à–∏ —Å–ø–∏—Å–∫–∏:</b>\n\n"
            "<i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–∞—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</i>\n"
            "<i>–°–∏–º–≤–æ–ª üëÅ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞</i>",
            reply_markup=markup,
            parse_mode='HTML'
        )
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {str(e)}')
        bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

